apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  namespace: ${NS_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      containers:
      - name: server
        image: ${IMAGE_REPOSITORY}/app_server:${SERVER_SERVICE_VERSION}
        imagePullPolicy: Always
        envFrom:
          - configMapRef:
              name: app-configmap
          - secretRef:
              name: app-secret
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: ${NS_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: ${IMAGE_REPOSITORY}/app_backend:${BACKEND_SERVICE_VERSION}
        imagePullPolicy: Always
        envFrom:
          - configMapRef:
              name: app-configmap
          - secretRef:
              name: app-secret
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
  namespace: ${NS_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
      - name: database
        image: ${IMAGE_REPOSITORY}/app_database:${DATABASE_SERVICE_VERSION}
        imagePullPolicy: Always
        envFrom:
          - configMapRef:
              name: app-configmap
          - secretRef:
              name: app-secret
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cache
  namespace: ${NS_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cache
  template:
    metadata:
      labels:
        app: cache
    spec:
      containers:
      - name: cache
        image: ${IMAGE_REPOSITORY}/app_server:${CACHE_SERVICE_VERSION}
        imagePullPolicy: Always
        envFrom:
          - configMapRef:
              name: app-configmap
          - secretRef:
              name: app-secret
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"